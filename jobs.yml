resources:
  - name: github_new
    type: GitRepo
    configuration:
      path: deepikasl/jfrog_pipelines
      gitProvider: deepikaGithub
  - name: S_Bash_0219_vmCluster
    type: VmCluster
    configuration:
      sshKey: BSR_SSHKeys
      targets:
        - 1.2.3.4
  - name: jfrogFEFS_cp
    type: FileSpec
    configuration:
      sourceArtifactory: entArt
      pattern: "libs-releases-local/com/jfrog/platform/jfrog-frontend-bin/1.*/jfrog-frontend-bin-1.*-*"
      exclusions:
        - "libs-releases-local/com/jfrog/platform/jfrog-frontend-bin/1.*/jfrog-frontend-bin-1.*-*.pom"
      recursive: false
      limit: 1
      sortBy:
        - "created"
        - "name"
      sortOrder: "desc"
  - name: S_Bash_0082_Aql
    type: Aql
    configuration:
      sourceArtifactory: s_artifactory
      query: items.find({"@build.name":{"$eq":"artifactory"}})
      addedProperties:
        key1: value1
        key2: value2
      mappings:
        - name: mapping1
          input: "/jfrog-\"fronten\"d-bin/1.*/ jfrog-frontend-bin-1.*-*."
          output: test1
        - name: mapping2
          input: IN
          output: test2

pipelines:
  - name: pipeline_new
    steps:          
      - name: bash_new
        type: Bash
        configuration:
          inputResources:
            - name: github_new
#             - name: jfrogFEFS_cp
            - name: S_Bash_0082_Aql
            - name: S_Bash_0219_vmCluster
        execution:
          onExecute:
            - echo "executing bash step..."
            - printenv
#             - pushd $res_jfrogFEFS_cp_resourcePath/com/jfrog/platform/jfrog-frontend-bin
#             - jfrogFEVersion=$(find . -mindepth 1 -maxdepth 1 -type d)
#             - popd
#             - jfrogFEVersion=${jfrogFEVersion//.\/}
#             - jq --arg value0 "$jfrogFEVersion" '. | .frontendVersion=$value0' <<<'{}' > ./manifest.json
#             - echo $jfrogFEVersion
#             - cat manifest.json
  
