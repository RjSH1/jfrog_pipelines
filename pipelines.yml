resources:
  - name: artifactory_go_example
    type: GitRepo
    configuration:
      path: deepikasl/artifactory-go-example
      gitProvider: deepikaGithub

  - name: go_build_info_publish
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: go_example_build_publish
      buildNumber: 1
  - name: unsigned_release_bundle_go_publish
    type: ReleaseBundle
    configuration:
      sourceArtifactory: dist
      name: go-service
      version: 0.1.20
  - name: signed_release_bundle_go_publish
    type: ReleaseBundle
    configuration:
      sourceArtifactory: dist
      name: go-service
      version: 0.1.20
  - name: dist_release_bundle_go_publish
    type: ReleaseBundle
    configuration:
      sourceArtifactory: dist
      name: test
      version: 0.1.20
  - name: promoted_go_build_info_go_publish
    type: BuildInfo
    configuration:
      sourceArtifactory: art
      buildName: promote_go_build_publish
      buildNumber: 1
  - name: distribution_rule_go_publish
    type: DistributionRule
    configuration:
      sourceArtifactory: dist
      cityName: "*"
      serviceName: "*"
      siteName: "*"
      countryCodes:
        - CN

pipelines:
  - name: go_publish_example
    steps:
      - name: publish_go
        type: GoPublishModule
        configuration:
          sourceLocation: .
          version: v1.2.1
          targetRepository: deepika-go
          deps: all
          inputResources:
            - name: artifactory_go_example
          integrations:
            - name: art
        execution:
          onStart:
            - wget https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz
            - sudo tar -C /usr/local -xzf go1.12.5.linux-amd64.tar.gz
            - export PATH=$PATH:/usr/local/go/bin
            - go version
      - name: publish_build_info
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: publish_go
          outputResources:
            - name: go_build_info_publish
      - name: promote_build_go
        type: PromoteBuild
        configuration:
          targetRepository: promoted_go_test
          comment: "comment"
          status: "ready"
          copy: true
          includeDependencies: true
          integrations:
            - name: art
          inputResources:
            - name: go_build_info_publish
          outputResources:
            - name: promoted_go_build_info_go_publish
      - name: bundle_go_publish
        type: CreateReleaseBundle
        configuration:
          dryRun: true
          description: "This is to test GoPublishModule -> PublishBuildInfo -> Promote -> CreateRelease -> Sign -> Distribute pipeline chain"
          releaseBundleName: go-service
          releaseBundleVersion: 0.1.20
          sign: false
          inputResources:
            - name: promoted_go_build_info_go_publish
          outputResources:
            - name: unsigned_release_bundle_go_publish
      - name: sign_release_bundle_go_publish
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: unsigned_release_bundle_go_publish
          outputResources:
            - name: signed_release_bundle_go_publish
      - name: distribute_signed_release_bundle
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputResources:
            - name: signed_release_bundle_go_publish
            - name: distribution_rule_go_publish
          integrations:
            - name: art
          outputResources:
            - name: dist_release_bundle_go_publish
      - name: testBash
        type: Bash
        configuration:
          inputResources:
            - name: dist_release_bundle_go_publish
        execution:
          onExecute:
            - echo "hi"
